version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  kafka-provider:
    build:
      context: ./Apache Kafka Provider
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLIENT_ID=provider_client
      - TOPIC_NAME=event
    depends_on:
      - kafka
      - zookeeper

  kafka-consumer:
    build:
      context: ./Apache Kafka Consumer
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLIENT_ID=consumer_client
      - CONSUMER_GROUP_ID=order_processing_group
      - AUTO_OFFSET_RESET=earliest
      - TOPIC_NAME=event
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=database1
      - MONGO_COLLECTION=events
    depends_on:
      - kafka
      - zookeeper
      - mongodb

  redis-provider:
    build:
      context: ./Redis Provider
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TOPIC_NAME=event
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=database1
      - MONGO_COLLECTION=events
    depends_on:
      - redis
      - mongodb

volumes:
  mongodb_data:
  redis-data:
